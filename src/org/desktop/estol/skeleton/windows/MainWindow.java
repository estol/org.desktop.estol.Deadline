/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.desktop.estol.skeleton.windows;

import org.desktop.estol.skeleton.applicationlogic.mainLogic;
import org.desktop.estol.skeleton.commons.NotificationIcon;
import java.awt.Toolkit;
import java.awt.TrayIcon;
import javax.swing.Box;
import org.desktop.estol.skeleton.debug.DebugUtilities;
import org.desktop.estol.skeleton.system.windowloader.LoadWindow;

/**
 *
 * @author estol
 */
public class MainWindow extends javax.swing.JFrame {
    
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        setLocation((Toolkit.getDefaultToolkit().getScreenSize().width  - getSize().width) / 2, (Toolkit.getDefaultToolkit().getScreenSize().height - getSize().height) /2);
        NotificationIcon.initSystrayIcon();
        NotificationIcon.displayMessage("Window created", "Main window loaded succesfully!", TrayIcon.MessageType.INFO);
        new mainLogic(js_DateTimeSpinner);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jp_timePanel = new javax.swing.JPanel();
        js_DateTimeSpinner = new javax.swing.JSpinner();
        MenuBar = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        ExitButton = new javax.swing.JMenuItem();
        DebugMenu = new javax.swing.JMenu();
        FireDebugMethod = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        DebugConsole = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Main Window");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(900, 600));
        setName("JFrame"); // NOI18N
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jp_timePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Time Panel"));

        js_DateTimeSpinner.setModel(new javax.swing.SpinnerDateModel());

        javax.swing.GroupLayout jp_timePanelLayout = new javax.swing.GroupLayout(jp_timePanel);
        jp_timePanel.setLayout(jp_timePanelLayout);
        jp_timePanelLayout.setHorizontalGroup(
            jp_timePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_timePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(js_DateTimeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(267, Short.MAX_VALUE))
        );
        jp_timePanelLayout.setVerticalGroup(
            jp_timePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_timePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(js_DateTimeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(121, Short.MAX_VALUE))
        );

        FileMenu.setText("File");

        ExitButton.setText("Exit (terminate application)");
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });
        FileMenu.add(ExitButton);

        MenuBar.add(FileMenu);

        DebugMenu.setText("Debug");
        MenuBar.add(Box.createHorizontalGlue());

        FireDebugMethod.setText("THE TRIGGER");
        FireDebugMethod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FireDebugMethodActionPerformed(evt);
            }
        });
        DebugMenu.add(FireDebugMethod);
        DebugMenu.add(jSeparator1);

        DebugConsole.setText("Debug Console");
        DebugConsole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DebugConsoleActionPerformed(evt);
            }
        });
        DebugMenu.add(DebugConsole);

        MenuBar.add(DebugMenu);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jp_timePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(480, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jp_timePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(393, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FireDebugMethodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FireDebugMethodActionPerformed
        
    }//GEN-LAST:event_FireDebugMethodActionPerformed

    private void DebugConsoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DebugConsoleActionPerformed
        if (dw != null && dw.isVisible()) {
            dw.setVisible(false);
        } else {
            if (dw == null) {
                dw = new DebugWindow();
            }
            new LoadWindow(dw);
        }
    }//GEN-LAST:event_DebugConsoleActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        
    }//GEN-LAST:event_formKeyPressed

    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
        LoadWindow.Terminate();
    }//GEN-LAST:event_ExitButtonActionPerformed

    @Override
    public void dispose() {
        LoadWindow.windowDestroyed();
        super.dispose();
    }
    private static DebugWindow dw;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem DebugConsole;
    private javax.swing.JMenu DebugMenu;
    private javax.swing.JMenuItem ExitButton;
    private javax.swing.JMenu FileMenu;
    private javax.swing.JMenuItem FireDebugMethod;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPanel jp_timePanel;
    private javax.swing.JSpinner js_DateTimeSpinner;
    // End of variables declaration//GEN-END:variables
}
